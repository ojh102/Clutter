apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion rootProject.ext.compile_sdk_version

    defaultConfig {
        minSdkVersion rootProject.ext.min_sdk_version
        targetSdkVersion rootProject.ext.target_sdk_version
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.kotlin_version"

    // Support Lib
    api "com.android.support:support-v4:$rootProject.support_library_version"
    api "com.android.support:appcompat-v7:$rootProject.support_library_version"
    api "com.android.support:support-vector-drawable:$rootProject.support_library_version"
    api "com.android.support:support-annotations:$rootProject.support_library_version"
    api "com.android.support:design:$rootProject.support_library_version"
    api "com.android.support:recyclerview-v7:$rootProject.support_library_version"
    api "com.android.support.constraint:constraint-layout:$rootProject.constraint_layout_version"
    kapt "com.android.databinding:compiler:$rootProject.android_gradle_version"

    // Firebase
    api "com.google.firebase:firebase-core:$rootProject.firebase_version"
    api "com.google.firebase:firebase-messaging:$rootProject.firebase_messaging_version"

    // AAC
    api "android.arch.lifecycle:extensions:$rootProject.lifecycle_version"
    api "android.arch.persistence.room:runtime:$rootProject.room_version"
    api "android.arch.persistence.room:rxjava2:$rootProject.room_version"
    api "android.arch.paging:runtime:$rootProject.paging_version"
    kapt "android.arch.lifecycle:compiler:$rootProject.lifecycle_version"
    kapt "android.arch.persistence.room:compiler:$rootProject.room_version"

    // DI
    api "com.google.dagger:dagger:$rootProject.dagger_version"
    api "com.google.dagger:dagger-android-support:$rootProject.dagger_version"
    api "com.google.dagger:dagger-android:$rootProject.dagger_version"
    compileOnly 'javax.annotation:jsr250-api:1.0'
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.dagger_version"

    // Retrofit & HTTP
    api "com.squareup.retrofit2:retrofit:$rootProject.retrofit_version"
    api "com.squareup.retrofit2:converter-gson:$rootProject.retrofit_version"
    api "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofit_version"
    api "com.squareup.okhttp3:okhttp:$rootProject.okhttp_version"
    api "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttp_version"

    // Rx
    api "io.reactivex.rxjava2:rxjava:$rootProject.rx_java_version"
    api "io.reactivex.rxjava2:rxandroid:$rootProject.rx_android_version"
    api "io.reactivex.rxjava2:rxkotlin:$rootProject.rx_kotlin_version"
    api "com.jakewharton.rxrelay2:rxrelay:$rootProject.rx_relay_version"

    // Lottie
    api "com.airbnb.android:lottie:$rootProject.lottie_version"

    // Debug
    api "com.jakewharton.timber:timber:$rootProject.timber_version"
    api "com.facebook.stetho:stetho:$rootProject.stetho_version"
    api "com.facebook.stetho:stetho-okhttp3:$rootProject.stetho_version"

    // Test
    testImplementation "junit:junit:$rootProject.junit_version"
    androidTestImplementation "com.android.support.test:runner:$rootProject.runner_version"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espresso_version"
}

